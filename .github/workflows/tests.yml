# Name of our workflow
name: Majibu Version 6 Tests


# Triggers for our workflow
on:
    # Allows you to trigger this workflow manually from Github
    workflow_dispatch:
    # Trigger workflow on push
    push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

jobs:
  unit-testing:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 4

    strategy:
      matrix:
        python-version: ['3.10', '3.11']

    container:
      image: python:${{ matrix.python-version }}

    services:
      postgres:
        image: postgres
        env:
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 3
        ports:
            - 5432:5432

      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 6378:6379

    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v4

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | bash

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up virtual environment
        run: python -m venv venv

      - name: Cache Virtual Environment
        uses: actions/cache@v4
        with:
          path: venv
          key: python:${{ matrix.python-version }}-venv-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            python:${{ matrix.python-version }}-venv-

      - name: Activate Virtual Environment
        shell: bash
        run: |
          source venv/bin/activate
          pip install -r requirements.txt
          echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH
          echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV

      # - name: Azure CLI script cmd
      #   run: |
      #     az account show

      - name: Load Secrets From Vault
        env:
          AZURE_KEY_VAULT_NAME: ${{ secrets.AZURE_KEY_VAULT_NAME }}
        run: |
          chmod +x ./scripts/ci-load-secrets.sh
          ./scripts/ci-load-secrets.sh

      - name: Run Tests
        id: run-unit-tests
        run: |
          coverage run manage.py test

      - name: Generate Coverage Report
        run: |
          coverage html -d htmlcov

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: python-${{ matrix.python-version }}.coverage-report
          path: htmlcov/index.html
          retention-days: 1
