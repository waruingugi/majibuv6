# Name of our workflow
name: Majibu Version 6 Tests

# Triggers for our workflow
on:
  workflow_dispatch:
  push:

# Ensures that only one instance of this workflow runs for each branch
# And cancels any currently running instances of this workflow if a new one is triggered.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-testing:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 7
    permissions:
      id-token: write
      contents: read

    strategy:
      matrix:
        python-version: ['3.10', '3.11']

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >
          --health-cmd "pg_isready"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Checkout Repository Code
        uses: actions/checkout@v4

      - name: Set up virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Cache Virtual Environment
        uses: actions/cache@v4
        with:
          path: venv
          key: python:${{ matrix.python-version }}-venv-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            python:${{ matrix.python-version }}-venv-

      - name: Load Secrets From Vault
        env:
          AZURE_KEY_VAULT_NAME: ${{ secrets.AZURE_KEY_VAULT_NAME }}
        run: |
          chmod +x ./scripts/ci-load-secrets.sh
          ./scripts/ci-load-secrets.sh

      - name: Run Tests
        id: run-unit-tests
        run: |
          source venv/bin/activate
          coverage run manage.py test
        env:
          DATABASE_URL: postgres://test:test@localhost:5432/test_db
          REDIS_URL: redis://localhost:6379

      - name: Generate Coverage Report
        run: |
          source venv/bin/activate
          coverage html -d htmlcov

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: python-${{ matrix.python-version }}.coverage-report
          path: htmlcov
          retention-days: 1

      - name: Upload to Azure Blob Storage
        if: matrix.python-version == '3.10'
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            SHA=${{ github.sha }}
            CONTAINER_NAME="github-${SHA}"
            STORAGE_ACCOUNT_NAME="majibutestcoverage"
            az storage container create --name ${CONTAINER_NAME} --account-name ${STORAGE_ACCOUNT_NAME} --auth-mode login
            az storage blob upload-batch -d ${CONTAINER_NAME} -s htmlcov --account-name ${STORAGE_ACCOUNT_NAME} --auth-mode login

      - name: Azure Logout
        run: az logout
        if: always()
