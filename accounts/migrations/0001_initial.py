# Generated by Django 5.0.6 on 2024-06-22 10:02

import accounts.constants
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MpesaPayments",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "merchant_request_id",
                    models.CharField(
                        help_text="Global unique Identifier for any submitted payment request.",
                        max_length=255,
                    ),
                ),
                (
                    "checkout_request_id",
                    models.CharField(
                        help_text="Global unique identifier for the processed transaction request.",
                        max_length=255,
                    ),
                ),
                (
                    "response_code",
                    models.IntegerField(
                        help_text="Indicates the status of the transaction submission. 0 means successful submission and any other code means an error occurred."
                    ),
                ),
                (
                    "response_description",
                    models.TextField(
                        blank=True,
                        help_text="Description message of the Response Code.",
                        null=True,
                    ),
                ),
                (
                    "customer_message",
                    models.TextField(
                        blank=True,
                        help_text="Message as an acknowledgement of the payment request submission.",
                        null=True,
                    ),
                ),
                (
                    "result_code",
                    models.IntegerField(
                        blank=True,
                        help_text="Indicates the status of the transaction processing. 0 means successful processing and any other code means an error occurred.",
                        null=True,
                    ),
                ),
                (
                    "result_description",
                    models.TextField(
                        blank=True,
                        help_text="Description message of the Results Code.",
                        null=True,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="This is the amount that was transacted.",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "receipt_number",
                    models.CharField(
                        blank=True,
                        help_text="This is the unique M-PESA transaction ID for the payment request.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        help_text="Phone number of the customer who made the payment.",
                        max_length=15,
                    ),
                ),
                (
                    "transaction_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="This is a timestamp that represents the date and time that the transaction completed.",
                        null=True,
                    ),
                ),
                ("external_response", models.JSONField(blank=True, null=True)),
            ],
            options={
                "ordering": ("-created_at",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Withdrawals",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "conversation_id",
                    models.CharField(
                        help_text="This is a global unique identifier for the transaction request returned by the API proxy upon successful request submission.",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "originator_conversation_id",
                    models.CharField(
                        help_text="This is a global unique identifier for the transaction request returned by the M-PESA upon successful request submission.",
                        max_length=255,
                    ),
                ),
                (
                    "response_code",
                    models.IntegerField(
                        help_text="Indicates the status of the transaction submission. 0 means successful submission and any other code means an error occurred."
                    ),
                ),
                (
                    "response_description",
                    models.TextField(
                        help_text="This is the description of the request submission status."
                    ),
                ),
                (
                    "result_code",
                    models.IntegerField(
                        blank=True,
                        help_text="Indicates the status of the transaction processing. 0 means successful processing and any other code means an error occurred.",
                        null=True,
                    ),
                ),
                (
                    "result_description",
                    models.TextField(
                        blank=True,
                        help_text="Description message of the Results Code.",
                        null=True,
                    ),
                ),
                (
                    "result_type",
                    models.IntegerField(
                        blank=True,
                        help_text="Indicates whether the transaction was already sent to your listener. Usual value is 0.",
                        null=True,
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "transaction_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="This is the Amount that was transacted.",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "working_account_available_funds",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Available balance of the Working account under the B2C shortcode used in the transaction.",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "utility_account_available_funds",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Available balance of the Utility account under the B2C shortcode used in the transaction.",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "transaction_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="This is a timestamp that represents the date and time that the transaction completed.",
                        null=True,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Phone number of the customer who received the payment.",
                        max_length=15,
                        null=True,
                    ),
                ),
                (
                    "full_name",
                    models.CharField(
                        blank=True,
                        help_text="Name of the customer who received the payment.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "charges_paid_account_available_funds",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Available balance of the Charges Paid account under the B2C shortcode.",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "is_mpesa_registered_customer",
                    models.BooleanField(blank=True, null=True),
                ),
                ("external_response", models.JSONField(blank=True, null=True)),
            ],
            options={
                "ordering": ("-created_at",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "external_transaction_id",
                    models.CharField(max_length=255, unique=True),
                ),
                (
                    "initial_balance",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.0"), max_digits=10
                    ),
                ),
                (
                    "final_balance",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.0"), max_digits=10
                    ),
                ),
                (
                    "cash_flow",
                    models.CharField(
                        choices=[
                            (
                                accounts.constants.TransactionCashFlow["INWARD"],
                                "INWARD",
                            ),
                            (
                                accounts.constants.TransactionCashFlow["OUTWARD"],
                                "OUTWARD",
                            ),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            (accounts.constants.TransactionTypes["BONUS"], "BONUS"),
                            (accounts.constants.TransactionTypes["REFUND"], "REFUND"),
                            (accounts.constants.TransactionTypes["REWARD"], "REWARD"),
                            (accounts.constants.TransactionTypes["DEPOSIT"], "DEPOSIT"),
                            (
                                accounts.constants.TransactionTypes["WITHDRAWAL"],
                                "WITHDRAWAL",
                            ),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.0"), max_digits=10
                    ),
                ),
                (
                    "fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.0"),
                        help_text="Services fees",
                        max_digits=10,
                    ),
                ),
                (
                    "tax",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.0"), max_digits=10
                    ),
                ),
                (
                    "charge",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.0"),
                        help_text="External costs related to the service.",
                        max_digits=10,
                    ),
                ),
                ("status", models.CharField(default="PENDING", max_length=255)),
                ("service", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("external_response", models.JSONField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("-created_at",),
                "abstract": False,
            },
        ),
    ]
